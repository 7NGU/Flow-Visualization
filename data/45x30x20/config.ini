[criticals]
# if False, the program will re-search the criticals and export to json file
# if True, the program will try to load critical information in json file
load_criticals_from_file = True

# parameters for template seeds near the critical points
[template seeds]
# distance from template seeding plane to the critical point
# with reference to the width of one single grid
# e.g.
# seed_plane_to_critical = 2.0
# width of one grid = 0.005
# then the distance from template seeding plane to the critical point will be:
# 2.0 * 0.005 = 0.01
seed_plane_to_critical = 2.0

# number of seeds placed on each template plane
# each critical point will generate two parallel planes in the direction of all three axes, i.e. 2 * 3 = 6 planes
# then the number of template seeds of one single critical point will be:
# seeds_per_plane * 6
seeds_per_plane = 5


# parameters for information entropy
[entropy]
# entropy threshold of important grids
# e.g.
# entropy_threshold = 0.5
# then the grids with entropy which is higher than 0.5 * maximum_of_all_entropy,
# will be marked as important grids.
entropy_threshold = 0.7


# parameters for overall seeding number control
[overall seeding]
# target overall seeding frequency
# e.g.
# seeding_frequency = 0.05 means that,
# the program will place 1 seed in every 20 grids, on average. (0.05 = 1/20)
# so if you have 45x30x20 = 27000 data points
# the grid number = 44x29x19 = 24244
# finally, total number of all seeds will be about:
# seeding_frequency * total_grid_number = 1212
# this is NOT an accurate config, but a rough control of seeding density
seeding_frequency = 0.05

# mode of seeding
# could be 'entropy', 'uniform', 'both' or 'blank'
# the program will first generates seeds around critical points according to the [template seeds] config section
# those template seeds are not sufficient for reasonable streamline visualization
# in order to reach the target overall seeding frequency,
# additional seeds must be generated
# this `mode` setting will decide the strategy for generating additional seeds:
#   1. 'entropy' mode:
#       additional seeds will all be generated in entropy-marked-important grids (those have entropy higher than threhold)
#       e.g.
#       if we first generate 100 template seeds, and overall seeding frequecy requires 1212 seeds in total
#       then we will generate another 1112 seeds in the important grids.
#   2. 'uniform' mode:
#       additional seeds will be generated uniformly in all un-seeded grids, ignoring the magnitude of entropy
#   3. 'both' mode:
#       additional seeds will first be generated in entropy-marked-important grids,
#       then if we still haven't reached the target seeds number,
#       the rest seeds will be generated uniformly in un-seeded grids, in order to reach the target seeds number
#   4. 'blank' mode:
#       no additional seeds will be generated, ignoring the `seeding_frequency` setting
mode = uniform

# this section [both mode setting] will be IGNORED if `mode` is NOT 'both'
[both mode setting]
# ratio of entropy seeding of all addition seeds
# e.g.
# entropy_seeding_ratio = 0.7
# if 1000 addtional seeds are required
# then 0.7 * 1000 = 700 seeds will come from entropy-marked-important grids
# the rest 300 seeds will be generated uniformly in other grids
entropy_seeding_ratio = 0.7
